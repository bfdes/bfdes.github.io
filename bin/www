#!/usr/bin/env node

const path = require('path')
const http = require('http')
const debug = require('debug')('init:server');

const dist = require('../dist/server')
const posts = dist.parseFiles(path.resolve(__dirname, '../posts'))
const app = dist.factory(posts)

const server = http.createServer(app);

// Listen on provided port, on all network interfaces.
server.listen(8080, function() {
  console.log('Express server listening on port ' + server.address().port);
})

server.on('error', onError);

// Event listener for HTTP server "error" event.
function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // Handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}
